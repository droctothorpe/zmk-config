/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
// Enable mouse

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// Left and right hand keys (Lily58)

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 54 55 56 57

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <125>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        HMShiftR: HMShiftR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMSHIFTR";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        HMShiftL: HMShiftL {
            compatible = "zmk,behavior-hold-tap";
            label = "HMSHIFTL";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 43 44 45 46 47 48 49 54 55 56 57>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";

            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp TAB         &kp Q             &kp W         &kp E            &kp R              &kp T                                               &kp Y          &kp U               &kp I             &kp O          &kp P              &kp BACKSPACE
&kp ESCAPE      &kp A             &kp S         &hml LEFT_GUI D  &hml LEFT_SHIFT F  &kp G                                               &kp H          &hmr RIGHT_SHIFT J  &hmr RIGHT_GUI K  &kp L          &kp SEMICOLON      &kp SQT
&kp LEFT_SHIFT  &kp Z             &kp X         &kp C            &kp V              &kp B                                               &kp N          &kp M               &kp COMMA         &kp PERIOD     &kp SLASH          &kp RIGHT_SHIFT
&tog 3          &kp LEFT_CONTROL  &kp LEFT_ALT  &trans           &kp GRAVE          &kp LEFT_GUI  &kp LS(LG(LBKT))    &kp LS(LG(RBKT))  &kp RIGHT_GUI  &trans              &trans            &kp RIGHT_ALT  &kp RIGHT_CONTROL  &kp DELETE
                                                &trans           &trans             &mo 1         &kp SPACE           &kp RET           &mo 2          &trans              &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        sym-and-num {
            display-name = "sym-and-nums";

            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp GRAVE  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3         &kp NUMBER_4            &kp N5                         &kp NUMBER_6     &kp N7                      &kp N8                   &kp N9                &kp N0                 &kp MINUS
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN   &hml LEFT_GUI POUND  &hml LEFT_SHIFT DOLLAR  &kp PERCENT                    &kp CARET        &hmr RIGHT_SHIFT AMPERSAND  &hmr RIGHT_GUI ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&trans     &kp F1           &kp F2        &kp F3               &kp F4                  &kp F5                         &kp F6           &kp F7                      &kp F8                   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp NON_US_BACKSLASH
&trans     &trans           &trans        &trans               &trans                  &trans       &trans    &trans  &mt LEFT_GUI F9  &kp F10                     &kp F11                  &kp F12               &trans                 &trans
                                          &trans               &trans                  &trans       &trans    &trans  &trans           &trans                      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        arrows {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans     &trans    &trans    &trans     &trans  &kp DELETE
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PG_UP  &kp HOME  &kp UP    &kp END    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans    &trans    &trans     &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans     &trans    &trans
            >;
        };

        bluetooth-and-mouse {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                       &trans     &trans          &trans          &trans           &trans  &trans
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans        &trans                             &trans     &msc SCRL_UP    &mmv MOVE_UP    &msc SCRL_DOWN   &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans                             &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans    &trans     &mkp MCLK  &trans          &trans          &trans           &trans  &trans
                                            &trans        &trans        &trans        &trans    &mkp LCLK  &mkp RCLK  &trans          &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
